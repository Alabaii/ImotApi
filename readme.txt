ImotApi.py служит для обращений к сервису заказчика
включая функции аутентификации
в этом файле присутсвует функция вывода конечной информации в файл json в формате
        [
            {
                'average_time': 16000.0,  --среднее время звонка одного оператора за день в милисекундах 
                'duration_call': 16000, --сумма всех звонков оператора за день в миллисекундах
                'name_employee': 'Мария Золотарева [Маткласс]', -- фио оператора по тегу Сотрудник
                'the_date': '15.11.2022', -- день совершения звонков
                'time_call': [1668528117], -- отсортированный список список начал всех unixstapm
                'time_first': 1668528117, -- начало первого unixstapm
                'time_last': 1668528117, -- начало последнего unixstapm
                'total': 1, -- количество звонков за день
                'work_time': 16.0 -- время работы в секундах
            },
            {

            },
            {
            },
        ]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
GsApi.py служит для обращений к гугл таблицам и гугл диску
содержит класс обертку для форматирования таблицы и функцию генерации таблицы
email service account : 	 al-707@imot-368722.iam.gserviceaccount.com
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
app.py запускает скрипт взаимодействия этих двух частей, по умолчанию собирая данные за вчерашний день, но так же возможно ввести в аргумент функции число в формате 
dd.mm.yyyy
результа работы скрипта app.py ссылка в консоль на гугл таблицу
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
самым простым решением запуска скрипта ежедневно являеться добавление скрипта app.py в cron планировщик заказчика

пример команды \
открыть редактор планировщика
> crontab -e
общий формат указания планировщику исполнение скрипта Python
[параметры запуска] [ссылка на интерпретатор python] [путь до .py скрипта]

# пример запуска в 0 15 ежедневно 
15 0 * * * /usr/bin/python3 /ImotApi/app.py

Так же есть менее стабильное решение через shedule.py тогда необходимо просто запустить скрипт, который работая, будет запускать app.py каждый день в 0:15

